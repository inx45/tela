/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  CrossBorderPayments as PrismaCrossBorderPayments,
} from "@prisma/client";

export class CrossBorderPaymentsServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.CrossBorderPaymentsCountArgs, "select">
  ): Promise<number> {
    return this.prisma.crossBorderPayments.count(args);
  }

  async crossBorderPaymentsItems(
    args: Prisma.CrossBorderPaymentsFindManyArgs
  ): Promise<PrismaCrossBorderPayments[]> {
    return this.prisma.crossBorderPayments.findMany(args);
  }
  async crossBorderPayments(
    args: Prisma.CrossBorderPaymentsFindUniqueArgs
  ): Promise<PrismaCrossBorderPayments | null> {
    return this.prisma.crossBorderPayments.findUnique(args);
  }
  async createCrossBorderPayments(
    args: Prisma.CrossBorderPaymentsCreateArgs
  ): Promise<PrismaCrossBorderPayments> {
    return this.prisma.crossBorderPayments.create(args);
  }
  async updateCrossBorderPayments(
    args: Prisma.CrossBorderPaymentsUpdateArgs
  ): Promise<PrismaCrossBorderPayments> {
    return this.prisma.crossBorderPayments.update(args);
  }
  async deleteCrossBorderPayments(
    args: Prisma.CrossBorderPaymentsDeleteArgs
  ): Promise<PrismaCrossBorderPayments> {
    return this.prisma.crossBorderPayments.delete(args);
  }
}
